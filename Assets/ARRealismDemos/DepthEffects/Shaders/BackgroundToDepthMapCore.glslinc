//-----------------------------------------------------------------------
// <copyright file="BackgroundToDepthMapCore.glslinc" company="Google LLC">
//
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// </copyright>
//-----------------------------------------------------------------------

// Normalized transition between 0 and 1.
uniform float _Transition;

vec3 RenderCameraToDepthMapTransition(vec3 cameraColor, float distance)
{
    float distance01 = clamp(distance / 5.0, 0.0, 1.0);
    vec3 depthColor = TurboColormap(distance01);

    // Add a small bias to distance to show color image if _Transition is equal to 0.
    float epsilon = 0.01;

    float transitionDepthRatio = step(distance01 + epsilon, _Transition);
    
    // The duration of far depth alpha blend between color and depth.
    float alphaBlendTransitionPoint = 0.8;
    transitionDepthRatio += smoothstep(alphaBlendTransitionPoint, 1.0, _Transition);

    transitionDepthRatio = clamp(transitionDepthRatio, 0.0, 1.0);

    vec3 outputColor = mix(cameraColor, depthColor, transitionDepthRatio);

    return outputColor;
}
